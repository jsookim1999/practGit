Use .gitignore Files
* project/.gitignore
* List of rules to determine which files to ignore (such as temporary file that does not need tracking)

Rules for ignoring files
- Pattern matching (basic regular expressions)
    ex. logs/*.txt // ignore all txt files in logs
- Ignore all files in a directory with a trailing slash
    ex. assets/videos/
- Comments
- Black lines are skipped

What to ignore:
- compliled source compliled
- packages and compressed files
- logs and databases
- operating system generated files
- user-uploaded assets (images, PDF, videos)

Globally Ignore Files:
- Ignore files in all repositories
- Settings are not tracked in repository
- User specific instead of repository specific
- git config --global core.excludesfiles ~/.gitignore_global

Ignore Tracked Files:
- how to stop tracking staged files?
    git rm --cached example.txt

Track Empty Directories:
- Git is designed to be a file tracking system
- Tracks files, not directories
- Tracks the directories it takes to get to files
- Ignores directories with NO files
- Solution: add a 'dot' file such as .gitkeep
- Or: touch temp/.gitkeep
    - that touch creates the file if it doesn't exist
    - if it exists, just updates the last modified time

